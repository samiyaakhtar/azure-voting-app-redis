# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  - group: Container Journey
  # Container registry service connection established during pipeline creation
  - name: dockerRegistryServiceConnection
    value: '66b6cef7-2f10-4780-843f-6a6156cdba5c'
  - name: imageRepository
    value: 'votingapp'
  - name: containerRegistry
    value: 'hellorings.azurecr.io'
  - name: dockerfilePath
    value: $(Build.SourcesDirectory)/azure-vote/Dockerfile
  - name: tag
    value: $(Build.BuildId)
  - name: vmImageName
    value: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - bash: |
        tag_name=$(tag)
        commitId=$(Build.SourceVersion)
        commitId=$(echo "${commitId:0:7}")
        service=$(Build.Repository.Name)
        service=${service##*/}
        echo "Downloading SPK"
        curl https://raw.githubusercontent.com/Microsoft/bedrock/master/gitops/azure-devops/build.sh > build.sh
        chmod +x build.sh
        . ./build.sh --source-only
        get_spk_version
        download_spk
        ./spk/spk deployment create -n $(ACCOUNT_NAME) -k $(ACCOUNT_KEY) -t $(TABLE_NAME) -p azure-voting --p1 $(Build.BuildId) --image-tag $tag_name --commit-id $commitId --service $service
      displayName: Update manifest pipeline details in Spektate db

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: hld_update
  displayName: ACR to HLD Stage
  dependsOn: Build
  condition: succeeded('Build')
  jobs:
  - job: hld_update
    displayName: HLD Update
    pool:
      vmImage: $(vmImageName)
    steps:
    - bash: |
        # Download build.sh
        curl https://raw.githubusercontent.com/Microsoft/bedrock/master/gitops/azure-devops/build.sh > build.sh
        chmod +x ./build.sh

        curl https://raw.githubusercontent.com/Microsoft/bedrock/master/gitops/azure-devops/release.sh > release.sh
        chmod +x ./release.sh

        # Execute release.sh
        . release.sh

        latest_commit=$(git rev-parse --short HEAD) 
        tag_name=$(Build.BuildId) 
        curl https://raw.githubusercontent.com/Microsoft/bedrock/master/gitops/azure-devops/build.sh > build.sh 
        chmod +x build.sh 
        . ./build.sh --source-only 
        get_spk_version
        download_spk 
        ./spk/spk deployment create  -n $(ACCOUNT_NAME) -k $(ACCOUNT_KEY) -t $(TABLE_NAME) -p azure-voting  --p2 $(Build.BuildId) --hld-commit-id $latest_commit --env $(Build.SourceBranchName) --image-tag $tag_name
      displayName: Bash step
      env:
        ACCESS_TOKEN_SECRET: $(ACCESS_TOKEN)
        COMMIT_MESSAGE: Update front end image tag to $(Build.BuildId)
        SUBCOMPONENT: azure-vote
        YAML_PATH: azureVoteFront.deployment.imageTag
        YAML_PATH_VALUE: $(Build.BuildId)
        REPO: https://github.com/samiyaakhtar/azure-voting-app.git
